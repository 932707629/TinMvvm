apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs"

android {
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "com.soushin.tinmvvm"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    kapt {
        //使用asXxx方法时必须，告知RxHttp你依赖的rxjava版本，可传入rxjava2、rxjava3
        arguments {
            arg("rxhttp_rxjava", rootProject.ext.rxjavaName)  //can pass in RxJava2, RxJava3
//            arg("rxhttp_package", "rxhttp")  //Specifies the RxHttp class package
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures{
        dataBinding=true
        viewBinding=true
    }
    lintOptions {
        abortOnError false
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            // 自定义文件名{示例：AppName-Flavor-debug-v1.0.0_201807301409}
            outputFileName = "TinMvvm${variant.flavorName}_${variant.buildType.name}_${variant.versionName}_${buildTime()}.apk"
        }
    }
}

static def buildTime() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    //kt+jetpack+androidx
    implementation(deps.kotlinstdlibjdk7)
    implementation(deps.appcompat)
    implementation(deps.constraintlayout)
    implementation(deps.swipeRefresh)
    implementation(deps.material)
    implementation(deps.recyclerview)
    implementation(deps.core_ktx)
    implementation(deps.flextbox)//流式布局
    implementation project(':tinmvvm')
    implementation(deps.work_runtime)//workmanager
    implementation 'com.kunminx.arch:smooth-navigation:3.9.0-beta1'
    ///过滤掉navigation-fragment否则会和smooth-navigation冲突
    implementation(deps.navigation_fragment_ktx){
        exclude group: 'androidx.navigation', module: "navigation-fragment"
    }
    implementation(deps.navigation_ui_ktx)
    //替换了jetpack官方的navigation-fragment库
    implementation(deps.paging_runtime)
    testImplementation(deps.paging_common)
//    implementation(deps.paging_rxjava2)
    implementation(deps.paging_rxjava3)
    implementation(deps.autosize)
    implementation(deps.fastjson)
    implementation(deps.brvh)
//    implementation(deps.qmui)
    implementation(deps.mmkv_static)
//    implementation(deps.rxpermissions)
    implementation(deps.rxpermissions3)
    implementation(deps.ToastUtils)
//    implementation(deps.basepopup)
    implementation(deps.rxhttp)
    implementation(deps.liveeventbus)
    //rxhttp插件
    kapt(deps.rxhttp_compiler) //注解处理器，生成RxHttp类
//   kapt deps.lifecycleompiler//配套android.arch.lifecycle使用
//    kapt(deps.databindingcompiler)//databinding使用
    //test
    debugApi(deps.leakcanary)
    compileOnly(deps.junit)
    androidTestImplementation(deps.test_junit)
    androidTestImplementation(deps.espresso)

}
