apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "com.soushin.tinmvvm"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        //必须，告知RxHttp你依赖的okhttp版本，目前已适配 v3.12.0 - v4.7.2版本  (v4.3.0除外)
                        rxhttp_okhttp: rootProject.ext.okhttpVersion,
                        //使用asXxx方法时必须，告知RxHttp你依赖的rxjava版本，可传入rxjava2、rxjava3
                        rxhttp_rxjava: rootProject.ext.rxjavaName,
//                        rxhttp_package: 'rxhttp'   //非必须，指定RxHttp相关类的生成路径，即包名
                ]
            }
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures{
        dataBinding=true
        viewBinding=true
    }
    lintOptions {
        abortOnError false
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            // 自定义文件名{示例：AppName-Flavor-debug-v1.0.0_201807301409}
            outputFileName = "TinMvvm${variant.flavorName}_${variant.buildType.name}_${variant.versionName}_${buildTime()}.apk"
        }
    }
}

static def buildTime() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation project(':tinmvvm')
//    implementation("com.github.932707629:tinmvvm:1.1.0")
    implementation(deps.work_runtime)
    implementation(deps.autosize)
    implementation(deps.fastjson)
    implementation(deps.brvh)
    implementation(deps.rxpermissions)
    implementation(deps.ToastUtils)
    implementation(deps.basepopup)
    implementation(deps.rxhttp)
    //rxhttp插件
    kapt(deps.rxhttp_compiler) //注解处理器，生成RxHttp类
//   kapt deps.lifecycleompiler//配套android.arch.lifecycle使用
    kapt(deps.databindingcompiler)//databinding使用
    //test
    debugApi(deps.leakcanary)
    compileOnly(deps.junit)
    androidTestImplementation(deps.test_junit)
    androidTestImplementation(deps.espresso)

}
