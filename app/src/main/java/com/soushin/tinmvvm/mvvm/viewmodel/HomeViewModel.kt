package com.soushin.tinmvvm.mvvm.viewmodelimport android.app.Applicationimport android.os.Buildimport android.os.Environmentimport android.view.Viewimport androidx.lifecycle.LifecycleOwnerimport androidx.lifecycle.MutableLiveDataimport androidx.lifecycle.lifecycleScopeimport androidx.lifecycle.viewModelScopeimport com.soushin.tinmvvm.app.widget.SingleLiveEventimport com.blankj.ALogimport com.jeremyliao.liveeventbus.LiveEventBusimport com.soushin.tinmvvm.Rimport com.soushin.tinmvvm.app.AppDataimport com.soushin.tinmvvm.app.GlobalConstantsimport com.soushin.tinmvvm.app.utils.FragmentUtilsimport com.soushin.tinmvvm.mvvm.repository.HomeRepositoryimport com.soushin.tinmvvm.mvvm.repository.entity.ViewTaskEventimport com.soushin.tinmvvm.mvvm.ui.fragment.MotionLayoutFragmentimport com.soushin.tinmvvm.mvvm.ui.fragment.MultiplexFragmentimport com.soushin.tinmvvm.mvvm.ui.fragment.RecyclerFragmentimport com.soushin.tinmvvm.mvvm.ui.fragment.ThreadPoolFragmentimport kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.isActiveimport kotlinx.coroutines.launchimport kotlinx.coroutines.withContextimport me.soushin.tinmvvm.base.BaseAppimport me.soushin.tinmvvm.base.BaseViewModelclass HomeViewModel(application: Application) :    BaseViewModel<HomeRepository>(application, HomeRepository()) {    var tvContent = MutableLiveData("Hello World")    val viewEvent by lazy { SingleLiveEvent<ViewTaskEvent>() }    val labels by lazy { MutableLiveData<MutableList<String>>() }    override fun onCreate(source: LifecycleOwner) {        super.onCreate(source)        ALog.e("Scope是否活跃",viewModelScope.isActive,lifecycle?.lifecycleScope?.isActive);        val list = mutableListOf("Multiplex Layout",            "BaseRecyclerViewAdapter","RxPermissions","Thread Pool",            "App Crash","Base Service","File Read Write","Motion Layout")        labels.value = list    }    fun onItemClick(item:String,v:View,position: Int){        ALog.e("onItemClick",item,position)        when(position){            0->{                LiveEventBus.get<ViewTaskEvent>(GlobalConstants.tag_main_view_event).post(                    ViewTaskEvent(GlobalConstants.action_add,MultiplexFragment.newInstance())                )            }            1->{                LiveEventBus.get<ViewTaskEvent>(GlobalConstants.tag_main_view_event).post(                    ViewTaskEvent(GlobalConstants.action_add,RecyclerFragment.newInstance())                )            }            2->{                viewEvent.value = ViewTaskEvent(key = 1)            }            3->{                LiveEventBus.get<ViewTaskEvent>(GlobalConstants.tag_main_view_event).post(                    ViewTaskEvent(GlobalConstants.action_add,ThreadPoolFragment.newInstance())                )            }            4->{                throw RuntimeException("模拟java运行时异常")            }            5->{                viewEvent.value = ViewTaskEvent(key = 2)            }            6->{                getScope().launch {                    withContext(Dispatchers.IO){                        ALog.i("getExternalStorageDirectory", Environment.getExternalStorageDirectory().absolutePath)                        ALog.i("getExternalStoragePublicDirectory",                            Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).absolutePath)                        ALog.i("getDataDirectory", Environment.getDataDirectory().absolutePath)                        ALog.i("getDownloadCacheDirectory", Environment.getDownloadCacheDirectory().absolutePath)                        ALog.i("getRootDirectory", Environment.getRootDirectory().absolutePath)                        ALog.i("DIRECTORY_MUSIC",getApplication<BaseApp>().getExternalFilesDir(                            Environment.DIRECTORY_MUSIC)?.absolutePath)                        ALog.i("DIRECTORY_ALARMS",getApplication<BaseApp>().getExternalFilesDir(                            Environment.DIRECTORY_ALARMS)?.absolutePath)                        ALog.i("DIRECTORY_DCIM",getApplication<BaseApp>().getExternalFilesDir(                            Environment.DIRECTORY_DCIM)?.absolutePath)                        ALog.i("DIRECTORY_DOCUMENTS",getApplication<BaseApp>().getExternalFilesDir(                            Environment.DIRECTORY_DOCUMENTS)?.absolutePath)                        ALog.i("DIRECTORY_DOWNLOADS",getApplication<BaseApp>().getExternalFilesDir(                            Environment.DIRECTORY_DOWNLOADS)?.absolutePath)                        ALog.i("DIRECTORY_MOVIES",getApplication<BaseApp>().getExternalFilesDir(                            Environment.DIRECTORY_MOVIES)?.absolutePath)                        ALog.i("DIRECTORY_NOTIFICATIONS",getApplication<BaseApp>().getExternalFilesDir(                            Environment.DIRECTORY_NOTIFICATIONS)?.absolutePath)                        ALog.i("DIRECTORY_PICTURES",getApplication<BaseApp>().getExternalFilesDir(                            Environment.DIRECTORY_PICTURES)?.absolutePath)                        ALog.i("DIRECTORY_PODCASTS",getApplication<BaseApp>().getExternalFilesDir(                            Environment.DIRECTORY_PODCASTS)?.absolutePath)                        ALog.i("DIRECTORY_RINGTONES",getApplication<BaseApp>().getExternalFilesDir(                            Environment.DIRECTORY_RINGTONES)?.absolutePath)                        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q){                            ALog.i("DIRECTORY_SCREENSHOTS",getApplication<BaseApp>().getExternalFilesDir(                                Environment.DIRECTORY_SCREENSHOTS)?.absolutePath)                            ALog.i("DIRECTORY_AUDIOBOOKS",getApplication<BaseApp>().getExternalFilesDir(                                Environment.DIRECTORY_AUDIOBOOKS)?.absolutePath)                        }                    }                }            }            7 -> {                LiveEventBus.get<ViewTaskEvent>(GlobalConstants.tag_main_view_event).post(                    ViewTaskEvent(GlobalConstants.action_add,MotionLayoutFragment.newInstance())                )            }        }    }}