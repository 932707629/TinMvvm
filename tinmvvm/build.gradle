apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.github.dcendents.android-maven'
group = 'com.github.soushin'
//apply plugin: 'kotlin-android-extensions'
//版本更新的命令
//gradlew clean build bintrayUpload -PbintrayUser=soushin -PbintrayKey=41191f3e38ba571be46a639901db861ee8053346 -PdryRun=false
android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolVersion
    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode = rootProject.tinmvvmVersionCode
        versionName = rootProject.tinmvvmVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
//            shrinkResources true
//            zipAlignEnabled true
            //子module使用consumerProguardFiles进行混淆配置
            consumerProguardFiles('proguard-rules.pro')
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
//            minifyEnabled true
//            shrinkResources true
//            zipAlignEnabled true
            //子module使用consumerProguardFiles进行混淆配置
            consumerProguardFiles('proguard-rules.pro')
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
    lintOptions {
        abortOnError false
    }
}

// 打包源码jar
/*task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier = 'sources'
}*/

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //kt+jetpack+androidx
    compileOnly(deps.kotlinstdlibjdk7)
    compileOnly(deps.core_ktx)
    implementation(deps.appcompat) {
        exclude group: "androidx.lifecycle", module: 'lifecycle-runtime'
        exclude group: "androidx.core", module: 'core'
        exclude group: "androidx.lifecycle", module: 'lifecycle-livedata'
        exclude group: "androidx.lifecycle", module: 'lifecycle-viewmodel'
    }
    api(deps.alog)
    api(deps.customactivityoncrash){
        exclude group: "androidx.appcompat", module: 'appcompat'
    }
    api(deps.extensions)
    //第三方工具库
    api(deps.rxandroid) {
        exclude group: "io.reactivex.rxjava2", module: 'rxjava'
    }
    api(deps.rxjava2)
    api(deps.rxlife_rxjava)
    api(deps.rxerrorhandler)
    api(deps.liveeventbus) {
        exclude group: "androidx.lifecycle", module: 'lifecycle-livedata'
        exclude group: "androidx.lifecycle", module: 'lifecycle-extensions'
    }
    api(deps.conscrypt)
    api(deps.okhttp)
    api(deps.glide){
        exclude group: "androidx.annotation", module: 'annotation'
        exclude group: "androidx.fragment", module: 'fragment'
        exclude group: "androidx.vectordrawable", module: 'vectordrawable-animated'
    }
    kapt(deps.glide_compiler)//配套glide使用
    api(deps.kotlinx_coroutines) {
        exclude group: "org.jetbrains.kotlin", module: 'kotlin-android-extensions-runtime'
    }
    api(deps.kotlinx_coroutines_android) {
        exclude group: "org.jetbrains.kotlin", module: 'kotlin-android-extensions-runtime'
    }
    api(deps.immersionbar)
    api(deps.immersionbar_components)
    api(deps.immersionbar_ktx) {
        exclude group: "org.jetbrains.kotlin", module: 'kotlin-android-extensions-runtime'
    }
}

//apply from: "../bintrayUpload.gradle"
